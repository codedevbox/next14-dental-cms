// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  isadmin       Boolean   @default(false)
  name          String?
  login         String   @unique
  password      String
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Languages {
  id                 String              @id @default(cuid())
  fullName           String
  shortName          String
  locale             String              @unique
  icon               String
  main               Boolean             @default(false)
  published          Boolean             @default(false)
  sortOrder          Int                 @default(0)
  pages              Pages[]             @relation("PageToLanguage")
  services           Services[]          @relation("ServiceToLanguage")
  faq                Faq[]               @relation("FaqToLanguage")
  testimonials       Testimonials[]      @relation("TestimonialToLanguage")
  gallery            Gallery[]           @relation("GalleryToLanguage")
  settings           Settings[]          @relation("SettingsToLanguage")
  translate          Translate[]         @relation("TranslateToLanguage")
}

model Pages {
  id                    String     @id @default(cuid())
  groupId               String     @default(cuid())
  languageId            String
  language              Languages  @relation("PageToLanguage", fields: [languageId], references: [id], onDelete: Cascade)
  published             Boolean    @default(false)
  sortOrder             Int        @default(0)
  name                  String
  slug                  String
  title                 String?
  description           String?
  h1                    String?
  content               String?
  headTitle             String?
  headDescription       String?
  headImage             String?
  
  @@unique([slug, languageId])
}

model  Services {
  id                    String     @id @default(cuid())
  groupId               String     @default(cuid())
  languageId            String
  language              Languages  @relation("ServiceToLanguage", fields: [languageId], references: [id], onDelete: Cascade)
  published             Boolean    @default(false)
  sortOrder             Int        @default(0)
  title                 String
  description           String?
  label                 String?
  price                 Int        @default(0)
  newPrice              Int        @default(0)
  image                 String?
  request               Boolean    @default(false)
}

model  Faq {
  id                    String     @id @default(cuid())
  groupId               String     @default(cuid())
  languageId            String
  language              Languages  @relation("FaqToLanguage", fields: [languageId], references: [id], onDelete: Cascade)
  published             Boolean    @default(false)
  sortOrder             Int        @default(0)
  question              String
  answer                String?
}

model  Testimonials {
  id                    String     @id @default(cuid())
  groupId               String     @default(cuid())
  languageId            String
  language              Languages  @relation("TestimonialToLanguage", fields: [languageId], references: [id], onDelete: Cascade)
  published             Boolean    @default(false)
  sortOrder             Int        @default(0)
  name                  String
  image                 String?
  text                  String?
}

model  Gallery {
  id                    String     @id @default(cuid())
  groupId               String     @default(cuid())
  languageId            String
  language              Languages  @relation("GalleryToLanguage", fields: [languageId], references: [id], onDelete: Cascade)
  published             Boolean    @default(false)
  sortOrder             Int        @default(0)
  name                  String
  image                 String?
}

model Settings {
  id                    String     @id @default(cuid())
  groupId               String     @default(cuid())
  languageId            String
  language              Languages  @relation("SettingsToLanguage", fields: [languageId], references: [id], onDelete: Cascade)
  published             Boolean    @default(false)
  sortOrder             Int        @default(0)
  name                  String
  type                  String
  category              String
  shorttag              String
  text                  String?

  @@unique([shorttag, languageId])
}


model Translate {
  id                    String     @id @default(cuid())
  groupId               String     @default(cuid())
  languageId            String
  language              Languages  @relation("TranslateToLanguage", fields: [languageId], references: [id], onDelete: Cascade)
  published             Boolean    @default(false)
  sortOrder             Int        @default(0)
  name                  String
  type                  String
  category              String
  shorttag              String
  text                  String?

  @@unique([shorttag, languageId])
}


